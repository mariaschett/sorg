(VAR
  P : Prgr
 w_1 : Wrd
 w_3 : Wrd
 w_2 : Wrd
 w_4 : Wrd
 w_0 : Wrd
 w_6 : Wrd
 w_7 : Wrd
 w_8 : Wrd
 w_5 : Wrd
 w_9 : Wrd
)
(FUN
0 : Wrd
1 : Wrd
2 : Wrd
3 : Wrd
4 : Wrd
5 : Wrd
6 : Wrd
7 : Wrd
8 : Wrd
9 : Wrd
10 : Wrd
11 : Wrd
12 : Wrd
13 : Wrd
14 : Wrd
15 : Wrd
255 : Wrd
4294967295 : Wrd
7776 : Wrd
PUSH : Wrd -> Prgr -> Prgr
SWAP1 : Prgr -> Prgr
SWAP2 : Prgr -> Prgr
SWAP3 : Prgr -> Prgr
SWAP4 : Prgr -> Prgr
SWAP5 : Prgr -> Prgr
SWAP6 : Prgr -> Prgr
DUP1 : Prgr -> Prgr
DUP2 : Prgr -> Prgr
DUP3 : Prgr -> Prgr
DUP4 : Prgr -> Prgr
DUP5 : Prgr -> Prgr
DUP6 : Prgr -> Prgr
DUP7 : Prgr -> Prgr
STOP : Prgr -> Prgr
ADD : Prgr -> Prgr
MUL : Prgr -> Prgr
SUB : Prgr -> Prgr
DIV : Prgr -> Prgr
SDIV : Prgr -> Prgr
MOD : Prgr -> Prgr
SMOD : Prgr -> Prgr
ADDMOD : Prgr -> Prgr
MULMOD : Prgr -> Prgr
EXP : Prgr -> Prgr
SIGNEXTEND : Prgr -> Prgr
LT : Prgr -> Prgr
GT : Prgr -> Prgr
SLT : Prgr -> Prgr
SGT : Prgr -> Prgr
EQ : Prgr -> Prgr
ISZERO : Prgr -> Prgr
AND : Prgr -> Prgr
OR : Prgr -> Prgr
XOR : Prgr -> Prgr
NOT : Prgr -> Prgr
BYTE : Prgr -> Prgr
SHL : Prgr -> Prgr
SHR : Prgr -> Prgr
SAR : Prgr -> Prgr
SHA3 : Prgr -> Prgr
ADDRESS : Prgr -> Prgr
BALANCE : Prgr -> Prgr
ORIGIN : Prgr -> Prgr
CALLER : Prgr -> Prgr
CALLVALUE : Prgr -> Prgr
CALLDATALOAD : Prgr -> Prgr
CALLDATASIZE : Prgr -> Prgr
CALLDATACOPY : Prgr -> Prgr
CODESIZE : Prgr -> Prgr
CODECOPY : Prgr -> Prgr
GASPRICE : Prgr -> Prgr
EXTCODESIZE : Prgr -> Prgr
EXTCODECOPY : Prgr -> Prgr
RETURNDATASIZE : Prgr -> Prgr
RETURNDATACOPY : Prgr -> Prgr
EXTCODEHASH : Prgr -> Prgr
BLOCKHASH : Prgr -> Prgr
COINBASE : Prgr -> Prgr
TIMESTAMP : Prgr -> Prgr
NUMBER : Prgr -> Prgr
DIFFICULTY : Prgr -> Prgr
GASLIMIT : Prgr -> Prgr
POP : Prgr -> Prgr
MLOAD : Prgr -> Prgr
MSTORE : Prgr -> Prgr
MSTORE8 : Prgr -> Prgr
SLOAD : Prgr -> Prgr
SSTORE : Prgr -> Prgr
JUMP : Prgr -> Prgr
JUMPI : Prgr -> Prgr
PC : Prgr -> Prgr
MSIZE : Prgr -> Prgr
GAS : Prgr -> Prgr
JUMPDEST : Prgr -> Prgr
LOG0 : Prgr -> Prgr
LOG1 : Prgr -> Prgr
LOG2 : Prgr -> Prgr
LOG3 : Prgr -> Prgr
LOG4 : Prgr -> Prgr
JUMPTO : Prgr -> Prgr
JUMPIF : Prgr -> Prgr
JUMPV : Prgr -> Prgr
JUMPSUB : Prgr -> Prgr
JUMPSUBV : Prgr -> Prgr
BEGINSUB : Prgr -> Prgr
BEGINDATA : Prgr -> Prgr
RETURNSUB : Prgr -> Prgr
PUTLOCAL : Prgr -> Prgr
GETLOCAL : Prgr -> Prgr
CREATE : Prgr -> Prgr
CALL : Prgr -> Prgr
CALLCODE : Prgr -> Prgr
RETURN : Prgr -> Prgr
DELEGATECALL : Prgr -> Prgr
CREATE2 : Prgr -> Prgr
STATICCALL : Prgr -> Prgr
REVERT : Prgr -> Prgr
INVALID : Prgr -> Prgr
SELFDESTRUCT : Prgr -> Prgr
)
(RULES
  PUSH(w_1, DUP5(ADD(SWAP2(SWAP1(SWAP2(P)))))) ->
    SWAP1(DUP4(PUSH(w_1, ADD(P)))),
  PUSH(w_2, DUP1(DUP4(ADD(SWAP2(SWAP1(SWAP2(P))))))) ->
    PUSH(w_2, SWAP1(PUSH(w_2, DUP4(ADD(P))))),
  ADD(PUSH(1, ISZERO(ISZERO(P)))) -> SWAP1(ADD(PUSH(1, P))),
  PUSH(w_1, SWAP2(DUP2(ADD(SWAP2(SWAP1(SWAP2(P))))))) ->
    DUP1(PUSH(w_1, SWAP2(SWAP3(ADD(P))))),
  PUSH(w_3, SLOAD(PUSH(w_2, SLOAD(SWAP1(P))))) ->
    PUSH(w_2, SLOAD(PUSH(w_3, SLOAD(P)))),
  DUP2(SWAP1(SSTORE(POP(POP(POP(P)))))) -> SSTORE(EQ(POP(P))),
  PUSH(w_2, DUP1(PUSH(w_2, DUP1(SWAP2(POP(P)))))) -> PUSH(w_2, DUP1(DUP1(P))),
  PUSH(w_3, DUP1(PUSH(w_4, DUP1(SWAP1(POP(P)))))) ->
    PUSH(w_3, PUSH(w_3, PUSH(w_4, P))),
  DUP1(SWAP4(SWAP3(SWAP2(SWAP1(P))))) -> SWAP3(SWAP2(SWAP1(DUP4(P)))),
  PUSH(w_4, PUSH(w_2, MLOAD(SWAP1(DUP1(P))))) ->
    PUSH(w_2, MLOAD(PUSH(w_4, PUSH(w_4, P)))),
  PUSH(w_3, PUSH(w_4, DUP3(ADD(DUP2(SWAP1(P)))))) ->
    PUSH(w_3, PUSH(w_3, DUP3(PUSH(w_4, ADD(P))))),
  RETURNDATASIZE(PUSH(w_2, MLOAD(DUP2(P)))) ->
    RETURNDATASIZE(PUSH(w_2, MLOAD(RETURNDATASIZE(P)))),
  RETURNDATASIZE(PUSH(w_2, DUP2(EQ(P)))) ->
    RETURNDATASIZE(RETURNDATASIZE(PUSH(w_2, EQ(P)))),
  CALLDATASIZE(PUSH(w_2, DUP2(EQ(P)))) ->
    CALLDATASIZE(CALLDATASIZE(PUSH(w_2, EQ(P)))),
  SWAP2(POP(POP(POP(P)))) -> OR(POP(POP(P))),
  DUP3(PUSH(w_1, DUP2(SWAP1(SSTORE(POP(P)))))) ->
    DUP3(SWAP3(PUSH(w_1, SSTORE(P)))),
  DUP2(PUSH(0, ADD(DUP2(DUP2(P))))) -> DUP2(DUP2(DUP4(P))),
  DUP1(SWAP2(POP(POP(SWAP2(SWAP1(POP(P))))))) -> SWAP3(SWAP2(POP(POP(P)))),
  DUP1(PUSH(w_0, DUP1(NOT(AND(DUP2(P)))))) -> DUP1(PUSH(0, DUP3(P))),
  ADDRESS(BALANCE(SWAP1(POP(P)))) -> POP(ADDRESS(BALANCE(P))),
  CALLER(PUSH(w_3, SWAP1(P))) -> PUSH(w_3, CALLER(P)),
  PUSH(w_1, DUP4(ADD(SWAP4(SWAP1(SWAP4(P)))))) ->
    SWAP3(PUSH(w_1, DUP4(ADD(P)))),
  PUSH(w_2, DUP1(MLOAD(CALLVALUE(DUP1(P))))) ->
    PUSH(w_2, PUSH(w_2, MLOAD(CALLVALUE(CALLVALUE(P))))),
  SWAP3(DUP4(SWAP1(P))) -> DUP1(SWAP4(P)),
  PUSH(w_2, DUP1(DUP4(ADD(DUP5(SWAP1(P)))))) ->
    PUSH(w_2, DUP4(DUP4(PUSH(w_2, ADD(P))))),
  PUSH(w_0, MUL(ADD(MLOAD(POP(P))))) -> POP(POP(P)),
  SWAP1(DUP2(SWAP1(P))) -> DUP1(SWAP2(P)),
  PUSH(1, CALLDATASIZE(LT(ISZERO(P)))) -> CALLDATASIZE(PUSH(0, LT(P))),
  DUP6(SWAP6(POP(P))) -> P,
  DUP2(SWAP1(POP(SWAP2(SWAP1(POP(P)))))) -> POP(SWAP1(P)),
  DUP2(DUP4(ADD(SWAP4(SWAP1(SWAP4(P)))))) -> SWAP3(DUP3(DUP3(ADD(P)))),
  DUP5(SWAP1(POP(P))) -> POP(DUP4(P)),
  DUP3(SWAP3(POP(P))) -> P,
  PUSH(w_3, CALLDATALOAD(PUSH(w_4, SWAP1(DUP2(P))))) ->
    PUSH(w_4, PUSH(w_3, CALLDATALOAD(PUSH(w_4, P)))),
  PUSH(w_3, SLOAD(PUSH(w_4, SWAP1(DUP2(P))))) ->
    PUSH(w_4, PUSH(w_3, SLOAD(PUSH(w_4, P)))),
  PUSH(w_8, DUP1(DUP3(SWAP2(POP(PUSH(w_6, PUSH(w_8, DUP5(PUSH(w_7, AND(PUSH(w_7, AND(DUP2(P))))))))))))) ->
    DUP1(PUSH(w_8, PUSH(w_6, DUP2(PUSH(w_7, DUP5(AND(PUSH(w_8, P)))))))),
  SWAP3(ADD(SWAP2(SWAP1(SWAP2(P))))) -> SWAP2(SWAP3(ADD(P))),
  DUP4(DUP6(ADD(DUP2(SWAP1(P))))) -> DUP1(DUP6(DUP6(ADD(P)))),
  PUSH(0, DUP2(LT(P))) -> PUSH(0, P),
  DUP1(PUSH(w_3, SWAP1(POP(P)))) -> PUSH(w_3, P),
  PUSH(w_3, DUP1(PUSH(w_2, SWAP2(POP(P))))) -> PUSH(w_2, PUSH(w_3, P)),
  DUP2(SWAP2(POP(P))) -> P,
  PUSH(w_2, DUP1(PUSH(w_2, SWAP1(POP(P))))) -> PUSH(w_2, DUP1(P)),
  PUSH(w_3, PUSH(w_2, SWAP1(SWAP2(ADD(P))))) ->
    PUSH(w_2, ADD(PUSH(w_3, SWAP1(P)))),
  PUSH(1, ISZERO(ISZERO(PUSH(w_6, PUSH(w_7, ORIGIN(PUSH(w_8, AND(PUSH(w_8, AND(P)))))))))) ->
    PUSH(1, PUSH(w_6, PUSH(w_7, PUSH(w_8, ORIGIN(AND(P)))))),
  DUP1(MLOAD(SWAP1(POP(P)))) -> MLOAD(P),
  PUSH(w_8, AND(PUSH(w_8, AND(P)))) -> PUSH(w_8, AND(P)),
  PUSH(0, PUSH(w_2, SLOAD(EQ(P)))) -> PUSH(w_2, SLOAD(ISZERO(P))),
  PUSH(w_7, CALLER(PUSH(w_6, AND(PUSH(w_6, AND(DUP2(P))))))) ->
    PUSH(w_7, PUSH(w_6, CALLER(AND(PUSH(w_7, P))))),
  PUSH(w_7, DUP3(PUSH(w_5, AND(PUSH(w_5, AND(DUP2(P))))))) ->
    PUSH(w_5, PUSH(w_7, SWAP1(DUP4(AND(PUSH(w_7, P)))))),
  SWAP1(LT(P)) -> GT(P),
  PUSH(w_7, DUP4(PUSH(w_6, AND(PUSH(w_6, AND(DUP2(P))))))) ->
    PUSH(w_7, PUSH(w_6, DUP5(AND(PUSH(w_7, P))))),
  DUP1(ADDRESS(PUSH(w_4, AND(PUSH(w_4, AND(DUP2(P))))))) ->
    DUP1(PUSH(w_4, ADDRESS(AND(DUP3(P))))),
  PUSH(w_2, PUSH(1, MUL(SWAP1(POP(DUP2(DUP2(SSTORE(POP(POP(P)))))))))) ->
    POP(PUSH(w_2, SSTORE(P))),
  PUSH(w_5, MLOAD(PUSH(w_3, SWAP1(PUSH(w_4, SWAP1(P)))))) ->
    PUSH(w_3, PUSH(w_4, PUSH(w_5, MLOAD(P)))),
  DUP4(SWAP1(POP(P))) -> POP(DUP3(P)),
  DUP2(ADD(SWAP3(SWAP1(SWAP3(P))))) -> DUP2(SWAP4(SWAP2(ADD(P)))),
  DUP3(DUP5(ADD(SWAP2(SWAP1(SWAP2(P)))))) -> SWAP1(DUP3(DUP5(ADD(P)))),
  DUP3(DUP2(ADD(SWAP2(SWAP1(SWAP2(P)))))) -> SWAP1(DUP3(DUP3(ADD(P)))),
  DUP2(SWAP3(POP(POP(POP(SWAP1(P)))))) -> SWAP1(SWAP3(SWAP2(GT(POP(P))))),
  DUP2(SWAP1(POP(P))) -> POP(DUP1(P)),
  DUP2(DUP2(ADD(SWAP3(SWAP1(SWAP3(P)))))) -> SWAP2(DUP2(DUP4(ADD(P)))),
  DUP2(ADD(SWAP2(SWAP1(SWAP2(P))))) -> DUP2(SWAP3(SWAP2(ADD(P)))),
  PUSH(0, ADD(P)) -> P,
  DUP2(SLOAD(PUSH(w_1, SWAP1(P)))) -> PUSH(w_1, DUP3(SLOAD(P))),
  DUP1(SWAP3(SWAP2(SWAP1(P)))) -> SWAP2(SWAP1(DUP3(P))),
  DUP1(SWAP3(POP(POP(POP(P))))) -> SWAP2(ISZERO(EQ(POP(P)))),
  DUP1(SWAP1(POP(SWAP2(SWAP1(POP(P)))))) -> SWAP1(POP(SWAP1(P))),
  DUP1(PUSH(0, ISZERO(ISZERO(DUP2(P))))) -> DUP1(PUSH(0, DUP3(P))),
  DUP1(SLOAD(PUSH(w_2, SWAP1(DUP2(P))))) ->
    PUSH(w_2, DUP2(SLOAD(PUSH(w_2, P)))),
  PUSH(w_8, PUSH(w_7, PUSH(w_5, POP(PUSH(w_8, DUP5(PUSH(w_6, AND(DUP2(P))))))))) ->
    PUSH(w_8, DUP3(PUSH(w_6, AND(DUP2(PUSH(w_7, SWAP2(PUSH(w_8, P)))))))),
  PUSH(w_4, POP(PUSH(w_7, CALLER(PUSH(w_6, AND(DUP2(P))))))) ->
    PUSH(w_7, PUSH(w_6, CALLER(AND(PUSH(w_7, P))))),
  SWAP1(SWAP2(AND(PUSH(w_4, SWAP1(DUP2(P)))))) ->
    PUSH(w_4, SWAP2(SWAP3(AND(PUSH(w_4, P))))),
  PUSH(0, PUSH(w_1, AND(PUSH(0, DUP1(DUP4(DUP2(P))))))) ->
    PUSH(0, DUP1(DUP2(DUP4(DUP4(P))))),
  PUSH(w_0, CALLER(SWAP1(POP(P)))) -> CALLER(P),
  PUSH(0, DUP5(LT(ISZERO(P)))) -> PUSH(1, P),
  POP(PUSH(w_1, DUP2(SWAP1(SSTORE(P))))) -> DUP2(PUSH(w_1, SSTORE(POP(P)))),
  PUSH(0, DUP2(LT(ISZERO(P)))) -> PUSH(1, P),
  CALLVALUE(DUP2(DUP4(ADD(DUP2(SWAP1(P)))))) ->
    CALLVALUE(CALLVALUE(DUP4(DUP4(ADD(P))))),
  DUP1(PUSH(w_1, DUP1(PUSH(w_2, PUSH(w_8, SWAP4(POP(PUSH(w_9, SWAP3(POP(PUSH(w_6, SWAP2(POP(PUSH(w_6, SWAP1(POP(P)))))))))))))))) ->
    PUSH(w_8, PUSH(w_9, PUSH(w_6, DUP1(P)))),
  PUSH(w_7, PUSH(w_1, PUSH(w_5, DUP1(PUSH(w_6, DUP7(SWAP4(POP(PUSH(w_7, SWAP3(POP(PUSH(w_7, SWAP2(POP(PUSH(w_7, SWAP1(POP(P))))))))))))))))) ->
    PUSH(w_7, DUP3(DUP2(DUP3(DUP2(P))))),
  SWAP2(SWAP3(POP(DUP3(SWAP2(P))))) -> DUP3(SWAP4(POP(P))),
  POP(DUP2(SWAP1(POP(P)))) -> XOR(POP(DUP1(P))),
  SWAP1(SWAP2(POP(DUP2(SWAP1(P))))) -> DUP2(SWAP3(POP(P))),
  SWAP1(POP(SWAP2(SWAP1(POP(P))))) -> SWAP3(SWAP2(POP(POP(P)))),
  DUP4(DUP3(SWAP1(P))) -> DUP2(DUP5(P)),
  DUP2(SWAP1(POP(POP(P)))) -> POP(P),
  PUSH(1, ISZERO(ISZERO(PUSH(w_6, PUSH(w_9, DUP4(PUSH(w_8, AND(PUSH(w_8, AND(DUP2(P))))))))))) ->
    PUSH(1, PUSH(w_6, PUSH(w_9, PUSH(w_8, DUP5(AND(PUSH(w_9, P))))))),
  DUP1(PUSH(w_1, SSTORE(POP(P)))) -> PUSH(w_1, SSTORE(P)),
  PUSH(w_3, DUP1(PUSH(w_4, DUP1(DUP7(SWAP4(POP(PUSH(w_5, SWAP3(POP(PUSH(w_6, SWAP2(POP(PUSH(w_6, SWAP1(POP(P)))))))))))))))) ->
    DUP3(PUSH(w_5, PUSH(w_6, DUP1(P)))),
  PUSH(w_3, DUP1(PUSH(w_4, DUP1(DUP5(SWAP4(POP(PUSH(w_5, SWAP3(POP(PUSH(w_6, SWAP2(POP(PUSH(w_5, SWAP1(POP(P)))))))))))))))) ->
    DUP1(PUSH(w_5, PUSH(w_6, DUP2(P)))),
  PUSH(w_1, PUSH(w_8, DUP1(PUSH(w_8, DUP1(DUP7(SWAP5(POP(PUSH(w_7, SWAP4(POP(PUSH(w_9, SWAP1(POP(P)))))))))))))) ->
    DUP2(PUSH(w_7, PUSH(w_8, DUP1(PUSH(w_9, P))))),
  PUSH(w_1, SWAP3(SWAP1(SWAP3(P)))) -> SWAP2(PUSH(w_1, P)),
  DUP2(ADD(SWAP1(DUP1(DUP1(CALLDATALOAD(SWAP1(PUSH(w_0, ADD(SWAP1(SWAP3(SWAP2(SWAP1(POP(POP(POP(P)))))))))))))))) ->
    POP(CALLDATALOAD(P)),
  DUP1(PUSH(w_9, PUSH(w_8, SWAP2(POP(PUSH(w_3, PUSH(w_4, PUSH(w_5, DUP5(PUSH(w_6, P)))))))))) ->
    PUSH(w_8, PUSH(w_9, PUSH(w_3, PUSH(w_4, PUSH(w_5, PUSH(w_6, PUSH(w_8, SWAP1(P)))))))),
  PUSH(0, PUSH(13, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(1, PUSH(w_9, PUSH(w_3, PUSH(2, PUSH(3, DUP2(GT(ISZERO(P)))))))) ->
    PUSH(1, PUSH(w_9, PUSH(w_3, PUSH(2, DUP4(P))))),
  PUSH(0, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(2, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(2, PUSH(1, P)),
  PUSH(1, PUSH(w_9, PUSH(w_3, PUSH(1, PUSH(3, DUP2(GT(ISZERO(P)))))))) ->
    PUSH(1, PUSH(w_9, PUSH(w_3, PUSH(1, DUP4(P))))),
  PUSH(0, CALLVALUE(EQ(P))) -> CALLVALUE(ISZERO(P)),
  NUMBER(PUSH(w_2, SWAP1(DUP2(P)))) -> PUSH(w_2, NUMBER(PUSH(w_2, P))),
  RETURNDATASIZE(DUP1(P)) -> RETURNDATASIZE(RETURNDATASIZE(P)),
  DUP2(ADD(SWAP1(DUP1(DUP1(MLOAD(SWAP1(PUSH(w_0, ADD(SWAP1(SWAP3(SWAP2(SWAP1(POP(POP(POP(POP(P))))))))))))))))) ->
    POP(POP(P)),
  PUSH(1, PUSH(w_8, PUSH(0, DUP1(PUSH(w_4, DUP2(GT(ISZERO(P)))))))) ->
    PUSH(1, PUSH(w_8, PUSH(0, DUP1(DUP4(P))))),
  DUP4(SLOAD(SWAP4(POP(P)))) -> SWAP3(SLOAD(SWAP3(P))),
  DUP2(SLOAD(SWAP2(POP(P)))) -> SWAP1(SLOAD(SWAP1(P))),
  DUP1(DUP1(CALLDATALOAD(SWAP1(PUSH(w_2, ADD(SWAP1(SWAP2(SWAP1(POP(POP(P))))))))))) ->
    CALLDATALOAD(P),
  DUP2(ADD(SWAP1(POP(P)))) -> ADD(P),
  PUSH(w_4, DUP1(CALLVALUE(SWAP2(POP(PUSH(0, SWAP1(POP(PUSH(0, DUP3(EQ(ISZERO(P)))))))))))) ->
    PUSH(0, CALLVALUE(SWAP1(DUP1(CALLVALUE(GT(P)))))),
  PUSH(w_7, PUSH(w_7, PUSH(w_2, POP(PUSH(w_8, PUSH(w_9, PUSH(w_5, POP(PUSH(w_7, DUP7(DUP2(P))))))))))) ->
    PUSH(w_7, DUP1(PUSH(w_8, PUSH(w_9, DUP3(DUP7(PUSH(w_7, P))))))),
  DUP2(PUSH(w_8, PUSH(w_5, POP(PUSH(w_8, PUSH(w_7, PUSH(w_6, POP(PUSH(w_8, DUP7(DUP2(P))))))))))) ->
    DUP2(PUSH(w_8, DUP1(PUSH(w_7, DUP2(DUP5(PUSH(w_8, P))))))),
  DUP2(ADD(SWAP1(DUP1(DUP1(MLOAD(SWAP1(PUSH(w_0, ADD(SWAP1(SWAP3(SWAP2(SWAP1(POP(POP(POP(P)))))))))))))))) ->
    POP(MLOAD(P)),
  PUSH(w_6, PUSH(w_7, PUSH(w_8, PUSH(w_9, DUP4(PUSH(w_6, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(w_6, PUSH(w_7, PUSH(w_8, PUSH(w_9, PUSH(w_6, PUSH(1, P)))))),
  PUSH(2, PUSH(w_7, PUSH(w_8, PUSH(w_9, DUP4(PUSH(3, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(2, PUSH(w_7, PUSH(w_8, PUSH(w_9, DUP4(PUSH(1, P)))))),
  PUSH(1, PUSH(w_7, PUSH(w_8, PUSH(w_9, DUP4(PUSH(3, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(1, PUSH(w_7, PUSH(w_8, PUSH(w_9, DUP4(PUSH(1, P)))))),
  PUSH(w_0, DUP1(DUP3(EXTCODESIZE(SWAP1(POP(PUSH(0, DUP2(EQ(SWAP2(POP(POP(SWAP2(SWAP1(POP(P))))))))))))))) ->
    EXTCODESIZE(ISZERO(SWAP1(P))),
  PUSH(0, DUP1(DUP1(PUSH(w_1, DUP5(AND(DUP2(SWAP1(LT(DUP1(ISZERO(SWAP1(P)))))))))))) ->
    PUSH(0, PUSH(0, PUSH(0, PUSH(1, DUP4(P))))),
  DUP1(PUSH(w_6, SWAP1(POP(PUSH(1, PUSH(6, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(w_6, PUSH(1, PUSH(1, P))),
  PUSH(w_7, DUP1(PUSH(w_7, DUP1(PUSH(w_6, SWAP3(POP(P))))))) ->
    PUSH(w_7, PUSH(w_6, PUSH(w_7, DUP3(P)))),
  DUP1(PUSH(w_8, DUP1(PUSH(w_9, DUP1(SWAP4(POP(P))))))) ->
    PUSH(w_9, PUSH(w_8, PUSH(w_8, PUSH(w_9, P)))),
  PUSH(w_5, DUP1(PUSH(w_6, DUP1(PUSH(w_6, DUP1(PUSH(w_5, SWAP5(POP(PUSH(w_6, SWAP4(POP(P)))))))))))) ->
    PUSH(w_5, DUP1(PUSH(w_6, DUP1(DUP1(DUP3(P)))))),
  PUSH(w_2, PUSH(w_3, PUSH(w_4, DUP5(SWAP3(POP(PUSH(w_5, SWAP2(POP(PUSH(w_5, SWAP1(POP(P)))))))))))) ->
    DUP2(PUSH(w_5, DUP1(P))),
  PUSH(0, ISZERO(ISZERO(PUSH(0, DUP1(DUP4(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))))))) ->
    PUSH(0, PUSH(0, PUSH(0, DUP4(DUP4(P))))),
  POP(PUSH(w_5, PUSH(w_6, PUSH(w_8, DUP4(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P)))))))))))) ->
    NOT(POP(PUSH(w_5, PUSH(w_6, PUSH(w_8, DUP4(PUSH(w_8, P))))))),
  PUSH(1, PUSH(4, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(1, PUSH(1, P)),
  PUSH(0, PUSH(4, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(w_0, DUP2(PUSH(w_3, DUP2(SWAP1(SSTORE(POP(PUSH(w_4, SWAP1(POP(SWAP2(SWAP1(POP(P))))))))))))) ->
    PUSH(w_3, PUSH(w_4, SWAP3(SWAP2(SWAP1(SSTORE(P)))))),
  PUSH(w_0, DUP1(PUSH(w_2, SWAP1(POP(DUP1(SLOAD(SWAP2(POP(POP(P)))))))))) ->
    PUSH(w_2, SLOAD(P)),
  PUSH(0, DUP1(PUSH(w_7, PUSH(0, DUP4(PUSH(w_3, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(0, PUSH(0, PUSH(w_7, PUSH(0, DUP1(PUSH(1, P)))))),
  PUSH(w_3, DUP1(PUSH(w_4, DUP1(SWAP3(POP(PUSH(w_4, SWAP2(POP(PUSH(w_5, SWAP1(POP(P)))))))))))) ->
    PUSH(w_4, DUP1(PUSH(w_5, P))),
  PUSH(w_6, DUP1(PUSH(w_6, DUP1(PUSH(1, PUSH(2, DUP2(GT(ISZERO(P))))))))) ->
    PUSH(w_6, PUSH(w_6, DUP2(DUP1(PUSH(1, PUSH(1, P)))))),
  DUP1(PUSH(w_7, DUP1(PUSH(w_6, SWAP3(POP(P)))))) ->
    PUSH(w_6, PUSH(w_7, DUP1(P))),
  PUSH(w_3, DUP1(PUSH(w_5, DUP1(PUSH(w_4, DUP6(MLOAD(SWAP5(POP(PUSH(w_4, SWAP4(POP(P)))))))))))) ->
    DUP1(MLOAD(PUSH(w_4, PUSH(w_5, DUP1(DUP3(P)))))),
  PUSH(1, PUSH(2, SUB(PUSH(2, DUP2(LT(ISZERO(ISZERO(P)))))))) ->
    PUSH(1, PUSH(1, P)),
  PUSH(0, DUP3(ADD(PUSH(w_7, PUSH(w_6, SWAP2(SWAP1(P))))))) ->
    PUSH(w_6, DUP3(PUSH(w_7, P))),
  PUSH(w_2, CALLVALUE(LT(ISZERO(ISZERO(P))))) -> CALLVALUE(PUSH(w_2, GT(P))),
  PUSH(9, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(9, PUSH(1, P)),
  PUSH(w_4, DUP1(PUSH(w_6, DUP1(PUSH(w_7, PUSH(w_5, SWAP5(POP(PUSH(w_6, SWAP4(POP(P))))))))))) ->
    PUSH(w_5, PUSH(w_6, DUP1(DUP1(PUSH(w_7, P))))),
  PUSH(0, PUSH(w_1, MUL(DUP3(PUSH(0, NOT(AND(EQ(ISZERO(ISZERO(P)))))))))) ->
    DUP2(ISZERO(P)),
  PUSH(w_6, DUP1(SUB(PUSH(1, DUP2(LT(ISZERO(ISZERO(P)))))))) ->
    PUSH(0, PUSH(1, P)),
  CALLER(SWAP1(POP(P))) -> POP(CALLER(P)),
  PUSH(w_5, DUP1(PUSH(w_7, DUP4(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))))) ->
    PUSH(w_5, PUSH(w_5, PUSH(w_7, DUP4(PUSH(w_7, P))))),
  CALLER(DUP1(P)) -> CALLER(CALLER(P)),
  PUSH(0, DUP1(DUP3(ADD(PUSH(w_6, PUSH(w_5, SWAP2(SWAP1(P)))))))) ->
    PUSH(0, PUSH(w_5, DUP3(SWAP3(PUSH(w_6, P))))),
  PUSH(w_5, DUP1(PUSH(w_5, DUP1(SWAP2(POP(P)))))) ->
    PUSH(w_5, DUP1(PUSH(w_5, P))),
  PUSH(3, PUSH(4, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(3, PUSH(1, P)),
  PUSH(w_4, PUSH(w_4, PUSH(w_5, NUMBER(GT(ISZERO(ISZERO(P))))))) ->
    PUSH(w_4, DUP1(NUMBER(PUSH(w_5, LT(P))))),
  CALLVALUE(PUSH(w_2, DUP2(EQ(P)))) -> CALLVALUE(CALLVALUE(PUSH(w_2, EQ(P)))),
  PUSH(w_6, DUP5(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))) ->
    PUSH(w_6, DUP5(PUSH(w_6, P))),
  PUSH(w_3, PUSH(w_2, SWAP1(P))) -> PUSH(w_2, PUSH(w_3, P)),
  PUSH(w_3, PUSH(w_4, SWAP1(DUP2(P)))) -> PUSH(w_4, PUSH(w_3, PUSH(w_4, P))),
  DUP1(SLOAD(SWAP1(POP(P)))) -> SLOAD(P),
  DUP1(DUP3(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))) ->
    DUP1(DUP3(DUP3(P))),
  PUSH(w_6, DUP4(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))) ->
    PUSH(w_6, DUP4(PUSH(w_6, P))),
  PUSH(w_6, DUP3(PUSH(0, NOT(AND(PUSH(0, NOT(AND(DUP2(P))))))))) ->
    PUSH(w_6, DUP3(PUSH(w_6, P))),
  PUSH(w_5, DUP1(PUSH(w_7, PUSH(w_6, MLOAD(SWAP1(P)))))) ->
    PUSH(w_5, PUSH(w_5, PUSH(w_6, MLOAD(PUSH(w_7, P))))),
  PUSH(0, DUP1(PUSH(w_6, DUP4(GT(PUSH(1, DUP2(EQ(P)))))))) ->
    PUSH(1, ISZERO(PUSH(0, PUSH(w_6, DUP4(GT(DUP1(P))))))),
  PUSH(w_3, DUP1(PUSH(w_3, DUP1(DUP5(MLOAD(SWAP3(POP(PUSH(w_4, SWAP1(POP(P))))))))))) ->
    PUSH(w_3, DUP2(MLOAD(DUP2(PUSH(w_4, P))))),
  DUP1(PUSH(w_6, DUP1(PUSH(w_5, SWAP3(POP(PUSH(w_6, SWAP2(POP(P))))))))) ->
    PUSH(w_5, PUSH(w_6, DUP1(P))),
  PUSH(w_4, DUP1(PUSH(w_7, DUP1(PUSH(w_5, SWAP4(POP(PUSH(w_6, SWAP3(POP(P)))))))))) ->
    PUSH(w_5, PUSH(w_6, PUSH(w_7, PUSH(w_7, P)))),
  PUSH(w_5, DUP1(PUSH(w_6, PUSH(w_7, DUP1(DUP2(GT(ISZERO(P)))))))) ->
    PUSH(w_5, PUSH(w_5, PUSH(w_6, PUSH(w_7, PUSH(1, P))))),
  PUSH(0, DUP3(LT(ISZERO(P)))) -> PUSH(1, P),
  PUSH(w_8, PUSH(w_7, MLOAD(SWAP1(P)))) -> PUSH(w_7, MLOAD(PUSH(w_8, P))),
  PUSH(w_4, POP(PUSH(w_8, PUSH(w_7, PUSH(w_5, POP(SLOAD(DUP2(P)))))))) ->
    PUSH(w_8, PUSH(w_7, SLOAD(PUSH(w_8, P)))),
  PUSH(w_2, POP(DUP2(SWAP1(SSTORE(POP(PUSH(w_4, SWAP1(POP(P))))))))) ->
    SSTORE(POP(PUSH(w_4, P))),
  ADDRESS(PUSH(w_2, DUP2(DUP2(P)))) ->
    ADDRESS(PUSH(w_2, ADDRESS(PUSH(w_2, P)))),
  PUSH(0, PUSH(w_1, PUSH(w_2, PUSH(w_3, EXP(SUB(AND(P))))))) -> PUSH(0, P),
  EQ(ISZERO(ISZERO(P))) -> EQ(P),
  PUSH(2, PUSH(13, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(2, PUSH(1, P)),
  PUSH(1, PUSH(13, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(1, PUSH(1, P)),
  PUSH(0, PUSH(5, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(10, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(10, PUSH(1, P)),
  PUSH(8, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(8, PUSH(1, P)),
  PUSH(3, PUSH(12, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(3, PUSH(1, P)),
  SWAP2(SWAP1(SWAP2(AND(SWAP1(P))))) -> DUP3(AND(SWAP2(POP(P)))),
  SWAP2(SWAP1(SWAP2(AND(P)))) -> SWAP1(SWAP2(AND(P))),
  PUSH(0, PUSH(7, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  SWAP1(SWAP3(POP(SWAP1(POP(P))))) -> SWAP2(POP(SWAP2(POP(P)))),
  SWAP1(DUP3(ADD(DUP2(SWAP1(P))))) -> DUP1(SWAP2(DUP4(ADD(P)))),
  PUSH(0, PUSH(11, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  SWAP1(POP(DUP1(SWAP3(POP(P))))) -> SWAP3(POP(POP(DUP2(P)))),
  SWAP1(POP(DUP1(SWAP2(POP(P))))) -> SWAP2(POP(POP(DUP1(P)))),
  PUSH(0, PUSH(14, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(0, PUSH(1, DUP2(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(1, P)),
  PUSH(0, DUP4(PUSH(w_1, AND(LT(ISZERO(DUP1(ISZERO(P)))))))) ->
    PUSH(1, PUSH(0, P)),
  PUSH(w_0, DUP3(SWAP1(POP(P)))) -> DUP2(P),
  PUSH(0, DUP2(PUSH(w_1, AND(LT(ISZERO(DUP1(ISZERO(P)))))))) ->
    PUSH(1, PUSH(0, P)),
  PUSH(w_4, SLOAD(TIMESTAMP(LT(ISZERO(ISZERO(P)))))) ->
    TIMESTAMP(PUSH(w_4, SLOAD(GT(P)))),
  PUSH(w_3, DUP1(PUSH(w_2, DUP4(MLOAD(SWAP2(POP(PUSH(w_3, SWAP1(POP(P)))))))))) ->
    PUSH(w_3, DUP2(MLOAD(DUP2(P)))),
  PUSH(w_5, DUP1(PUSH(w_6, DUP1(PUSH(w_5, DUP1(PUSH(w_5, SWAP4(POP(P))))))))) ->
    PUSH(w_5, PUSH(w_5, DUP2(PUSH(w_6, DUP4(DUP1(P)))))),
  PUSH(w_6, DUP1(PUSH(w_6, DUP1(PUSH(w_6, DUP1(PUSH(w_5, SWAP3(POP(P))))))))) ->
    PUSH(w_6, DUP1(DUP1(PUSH(w_5, PUSH(w_6, DUP5(P)))))),
  DUP1(PUSH(w_1, PUSH(w_5, SWAP2(POP(PUSH(w_6, SWAP1(POP(P)))))))) ->
    PUSH(w_5, PUSH(w_6, P)),
  PUSH(0, DUP1(PUSH(0, ADD(PUSH(w_3, ADD(SLOAD(SWAP1(POP(P))))))))) ->
    PUSH(w_3, SLOAD(P)),
  DUP1(CALLER(SWAP1(POP(PUSH(w_4, DUP2(P)))))) ->
    CALLER(PUSH(w_4, CALLER(P))),
  PUSH(0, PUSH(w_1, DUP4(AND(LT(P))))) -> PUSH(0, P),
  PUSH(w_6, DUP2(PUSH(w_5, SWAP2(SWAP1(P))))) ->
    PUSH(w_5, PUSH(w_6, DUP3(P))),
  PUSH(w_1, CALLVALUE(SWAP1(POP(DUP1(PUSH(0, EQ(P))))))) ->
    CALLVALUE(DUP1(ISZERO(P))),
  PUSH(w_2, TIMESTAMP(LT(ISZERO(ISZERO(P))))) -> TIMESTAMP(PUSH(w_2, GT(P))),
  DUP2(DUP4(ADD(DUP5(SWAP1(P))))) -> DUP4(DUP4(DUP4(ADD(P)))),
  DUP1(SWAP3(SWAP2(POP(POP(P))))) -> SWAP1(POP(SWAP1(P))),
  PUSH(w_2, SWAP1(SWAP2(SWAP1(P)))) -> SWAP1(PUSH(w_2, P)),
  DUP1(DUP5(ADD(SWAP4(POP(P))))) -> SWAP3(DUP4(ADD(SWAP3(P)))),
  DUP1(DUP5(ADD(DUP4(SWAP1(P))))) -> DUP3(DUP5(DUP3(ADD(P)))),
  PUSH(w_7, PUSH(w_8, DUP2(SWAP1(P)))) -> PUSH(w_7, PUSH(w_7, PUSH(w_8, P))),
  PUSH(w_5, DUP1(MLOAD(DUP1(DUP3(ADD(SWAP1(SWAP2(P)))))))) ->
    PUSH(w_5, MLOAD(DUP1(PUSH(w_5, ADD(PUSH(w_5, P)))))),
  PUSH(w_5, PUSH(w_4, MLOAD(SWAP1(DUP2(ADD(PUSH(w_6, SWAP1(DUP2(P))))))))) ->
    PUSH(w_4, MLOAD(PUSH(w_6, PUSH(w_5, DUP3(ADD(PUSH(w_6, P))))))),
  DUP1(DUP4(ADD(DUP3(SWAP1(P))))) -> DUP2(DUP4(DUP3(ADD(P)))),
  DUP1(MLOAD(SWAP3(POP(POP(P))))) -> MLOAD(SWAP2(POP(P))),
  PUSH(w_2, DUP2(SWAP1(SSTORE(PUSH(w_2, DUP2(SWAP1(SSTORE(POP(P))))))))) ->
    PUSH(w_2, SSTORE(P)),
  PUSH(w_5, PUSH(w_6, PUSH(w_4, SWAP2(SWAP1(P))))) ->
    PUSH(w_4, PUSH(w_5, PUSH(w_6, P))),
  PUSH(w_5, DUP2(DUP2(PUSH(w_4, SWAP2(SWAP1(P)))))) ->
    PUSH(w_5, PUSH(w_4, DUP3(PUSH(w_5, P)))),
  PUSH(0, DUP2(PUSH(w_1, AND(LT(ISZERO(ISZERO(P))))))) -> PUSH(0, P),
  DUP2(PUSH(w_3, DUP2(SWAP1(SSTORE(POP(SWAP2(SWAP1(POP(P))))))))) ->
    PUSH(w_3, SWAP3(SWAP2(SWAP1(SWAP3(SSTORE(P)))))),
  DUP2(PUSH(w_4, DUP2(LT(ISZERO(ISZERO(P)))))) ->
    DUP2(PUSH(w_4, DUP4(LT(P)))),
  DUP1(PUSH(w_4, DUP1(SWAP2(POP(PUSH(w_5, SWAP1(POP(P)))))))) ->
    PUSH(w_4, PUSH(w_5, P)),
  PUSH(w_4, PUSH(w_5, PUSH(w_3, POP(PUSH(w_4, DUP6(DUP2(P))))))) ->
    PUSH(w_4, PUSH(w_5, DUP2(DUP6(DUP4(P))))),
  PUSH(w_1, SWAP1(SWAP2(ADD(P)))) -> SWAP1(PUSH(w_1, ADD(P))),
  PUSH(w_9, PUSH(2, PUSH(255, AND(DUP2(P))))) ->
    PUSH(w_9, PUSH(2, PUSH(w_9, P))),
  PUSH(0, PUSH(w_2, SLOAD(SUB(PUSH(w_2, DUP2(SWAP1(SSTORE(POP(P))))))))) -> P,
  PUSH(1, PUSH(4, DUP2(GT(ISZERO(P))))) -> PUSH(1, PUSH(1, P)),
  PUSH(w_4, PUSH(1, ISZERO(ISZERO(PUSH(w_6, PUSH(w_4, P)))))) ->
    PUSH(w_4, PUSH(1, PUSH(w_6, DUP3(P)))),
  PUSH(w_5, PUSH(w_5, PUSH(w_6, PUSH(w_6, DUP2(GT(PUSH(0, P))))))) ->
    PUSH(w_5, DUP1(PUSH(w_6, PUSH(0, DUP1(P))))),
  PUSH(w_5, PUSH(w_6, PUSH(2, PUSH(3, DUP2(GT(PUSH(w_5, P))))))) ->
    PUSH(w_5, PUSH(w_6, PUSH(2, PUSH(0, DUP4(P))))),
  PUSH(w_0, CALLER(SWAP1(POP(PUSH(w_3, DUP2(P)))))) ->
    CALLER(PUSH(w_3, CALLER(P))),
  PUSH(w_3, DUP2(AND(PUSH(w_4, SWAP1(DUP2(P)))))) ->
    PUSH(w_4, DUP2(PUSH(w_3, AND(PUSH(w_4, P))))),
  PUSH(w_1, SWAP4(SWAP1(SWAP4(P)))) -> SWAP3(PUSH(w_1, P)),
  CALLVALUE(PUSH(w_2, DUP2(LT(P)))) -> CALLVALUE(CALLVALUE(PUSH(w_2, GT(P)))),
  CALLVALUE(PUSH(w_4, DUP1(DUP1(PUSH(w_5, DUP5(P)))))) ->
    CALLVALUE(PUSH(w_4, DUP1(PUSH(w_4, PUSH(w_5, CALLVALUE(P)))))),
  PUSH(w_1, DUP3(SWAP1(P))) -> DUP2(PUSH(w_1, P)),
  PUSH(1, ISZERO(ISZERO(PUSH(w_4, PUSH(w_6, DUP4(DUP2(P))))))) ->
    PUSH(1, PUSH(w_4, PUSH(w_6, DUP4(PUSH(w_6, P))))),
  SWAP2(DUP3(SWAP1(P))) -> DUP1(SWAP3(P)),
  PUSH(1, DUP2(MUL(PUSH(w_2, DUP2(SWAP1(SSTORE(POP(POP(P))))))))) ->
    PUSH(w_2, SSTORE(P)),
  PUSH(w_5, DUP1(PUSH(w_3, SWAP2(SWAP1(P))))) ->
    PUSH(w_3, PUSH(w_5, PUSH(w_5, P))),
  DUP1(PUSH(w_2, ADD(SWAP1(POP(DUP1(POP(P))))))) -> PUSH(w_2, ADD(P)),
  SWAP2(SWAP1(SWAP2(AND(PUSH(w_4, SWAP1(DUP2(P))))))) ->
    PUSH(w_4, SWAP2(SWAP3(AND(PUSH(w_4, P))))),
  PUSH(w_2, SWAP4(DUP5(SWAP1(P)))) -> PUSH(w_2, PUSH(w_2, SWAP5(P))),
  PUSH(w_2, MLOAD(CALLVALUE(SLT(ISZERO(ISZERO(P)))))) ->
    CALLVALUE(PUSH(w_2, MLOAD(SGT(P)))),
  PUSH(w_1, SWAP2(SWAP1(SWAP2(P)))) -> SWAP1(PUSH(w_1, P)),
  DUP1(SWAP1(POP(P))) -> P,
  PUSH(w_0, NUMBER(SWAP1(POP(P)))) -> NUMBER(P),
  PUSH(w_4, DUP1(MLOAD(PUSH(w_3, SWAP3(SWAP1(SWAP3(AND(DUP3(P))))))))) ->
    PUSH(w_4, MLOAD(DUP1(SWAP2(PUSH(w_3, AND(PUSH(w_4, SWAP2(P)))))))),
  PUSH(w_0, TIMESTAMP(SWAP1(POP(P)))) -> TIMESTAMP(P),
  PUSH(w_0, ADDRESS(SWAP1(POP(P)))) -> ADDRESS(P),
  PUSH(0, NOT(AND(P))) -> P,
  PUSH(w_3, DUP1(SLOAD(SWAP1(POP(SWAP1(POP(PUSH(w_2, P)))))))) ->
    POP(PUSH(w_2, PUSH(w_3, SLOAD(SWAP1(P))))),
  PUSH(0, EQ(P)) -> ISZERO(P),
  PUSH(3, DUP1(PUSH(5, DUP2(GT(ISZERO(P)))))) -> PUSH(3, DUP1(PUSH(1, P))),
  PUSH(2, DUP1(PUSH(5, DUP2(GT(ISZERO(P)))))) -> PUSH(2, DUP1(PUSH(1, P))),
  PUSH(2, DUP1(PUSH(3, DUP2(GT(ISZERO(P)))))) -> PUSH(2, PUSH(2, PUSH(1, P))),
  PUSH(1, DUP1(PUSH(9, DUP2(GT(ISZERO(P)))))) -> PUSH(1, PUSH(1, PUSH(1, P))),
  PUSH(1, DUP1(PUSH(5, DUP2(GT(ISZERO(P)))))) -> PUSH(1, PUSH(1, PUSH(1, P))),
  PUSH(1, DUP1(PUSH(3, DUP2(GT(ISZERO(P)))))) -> PUSH(1, PUSH(1, PUSH(1, P))),
  PUSH(1, DUP1(PUSH(2, DUP2(GT(ISZERO(P)))))) -> PUSH(1, DUP1(DUP2(P))),
  DUP3(DUP3(ADD(DUP3(GT(P))))) -> DUP2(NOT(DUP4(GT(P)))),
  PUSH(0, DUP3(PUSH(w_3, AND(GT(ISZERO(P)))))) ->
    DUP2(PUSH(w_3, AND(ISZERO(P)))),
  PUSH(w_1, DUP1(DUP3(MLOAD(SWAP2(POP(PUSH(w_2, SWAP1(POP(P))))))))) ->
    DUP1(MLOAD(PUSH(w_2, P))),
  PUSH(0, DUP1(DUP3(LT(ISZERO(ISZERO(ISZERO(P))))))) -> PUSH(0, PUSH(1, P)),
  PUSH(0, DUP1(PUSH(w_5, DUP2(GT(ISZERO(P)))))) ->
    PUSH(0, PUSH(0, PUSH(1, P))),
  PUSH(w_6, DUP1(PUSH(w_5, DUP1(PUSH(w_6, DUP1(SWAP5(POP(P)))))))) ->
    PUSH(w_6, DUP1(PUSH(w_5, PUSH(w_5, PUSH(w_6, P))))),
  PUSH(0, CALLVALUE(GT(ISZERO(P)))) -> CALLVALUE(ISZERO(P)),
  PUSH(w_0, DUP1(TIMESTAMP(NUMBER(SWAP2(POP(SWAP2(POP(SWAP1(P))))))))) ->
    NUMBER(TIMESTAMP(P)),
  PUSH(0, DUP1(ISZERO(ISZERO(P)))) -> PUSH(0, PUSH(0, P)),
  PUSH(w_5, DUP1(MLOAD(SWAP1(P)))) -> PUSH(w_5, MLOAD(PUSH(w_5, P))),
  PUSH(w_4, PUSH(w_5, PUSH(w_3, POP(PUSH(w_4, DUP4(DUP2(P))))))) ->
    PUSH(w_4, PUSH(w_5, DUP2(DUP4(DUP4(P))))),
  PUSH(0, PUSH(w_3, NOT(DUP4(ADD(LT(P)))))) -> PUSH(0, P),
  PUSH(w_4, CALLER(DUP2(PUSH(w_5, DUP3(P))))) ->
    PUSH(w_4, CALLER(PUSH(w_4, PUSH(w_5, CALLER(P))))),
  POP(PUSH(w_5, PUSH(w_5, DUP2(GT(ISZERO(PUSH(w_4, P))))))) ->
    PUSH(1, PUSH(w_4, PUSH(w_5, SWAP3(POP(P))))),
  PUSH(0, DUP4(LT(P))) -> PUSH(0, P),
  PUSH(0, DUP3(LT(P))) -> PUSH(0, P),
  CALLVALUE(DUP1(P)) -> CALLVALUE(CALLVALUE(P)),
  CALLVALUE(PUSH(w_2, SWAP1(DUP2(P)))) -> PUSH(w_2, CALLVALUE(PUSH(w_2, P))),
  CALLER(PUSH(w_2, SWAP1(DUP2(P)))) -> PUSH(w_2, CALLER(PUSH(w_2, P))),
  CALLER(PUSH(w_2, DUP2(DUP2(P)))) -> CALLER(PUSH(w_2, CALLER(PUSH(w_2, P)))),
  ADDRESS(PUSH(w_2, SWAP1(DUP2(P)))) -> PUSH(w_2, ADDRESS(PUSH(w_2, P))),
  PUSH(w_1, DUP1(CALLER(SWAP2(POP(PUSH(w_2, SWAP1(POP(P)))))))) ->
    CALLER(PUSH(w_2, P)),
  PUSH(w_2, SWAP1(SWAP2(AND(PUSH(w_3, SWAP1(P)))))) ->
    SWAP1(PUSH(w_2, PUSH(w_3, SWAP2(AND(P))))),
  PUSH(1, MUL(P)) -> P,
  PUSH(w_4, POP(PUSH(w_5, DUP5(DUP2(P))))) -> PUSH(w_5, DUP5(PUSH(w_5, P))),
  PUSH(w_1, POP(DUP2(SWAP1(SSTORE(POP(P)))))) -> SSTORE(P),
  SWAP2(POP(POP(POP(P)))) -> POP(POP(POP(P))),
  SWAP1(POP(POP(P))) -> POP(POP(P)),
  DUP2(SWAP1(SSTORE(POP(PUSH(w_3, SWAP1(POP(P))))))) ->
    PUSH(w_3, SWAP3(POP(SSTORE(P)))),
  PUSH(8, PUSH(9, DUP2(GT(ISZERO(P))))) -> PUSH(8, PUSH(1, P)),
  PUSH(6, PUSH(9, DUP2(GT(ISZERO(P))))) -> PUSH(6, PUSH(1, P)),
  PUSH(5, PUSH(9, DUP2(GT(ISZERO(P))))) -> PUSH(5, PUSH(1, P)),
  PUSH(5, PUSH(6, DUP2(GT(ISZERO(P))))) -> PUSH(5, PUSH(1, P)),
  PUSH(4, PUSH(9, DUP2(GT(ISZERO(P))))) -> PUSH(4, PUSH(1, P)),
  PUSH(4, PUSH(6, DUP2(GT(ISZERO(P))))) -> PUSH(4, PUSH(1, P)),
  PUSH(4, PUSH(5, DUP2(GT(ISZERO(P))))) -> PUSH(4, PUSH(1, P)),
  PUSH(3, PUSH(6, DUP2(GT(ISZERO(P))))) -> PUSH(3, PUSH(1, P)),
  PUSH(3, PUSH(5, DUP2(GT(ISZERO(P))))) -> PUSH(3, PUSH(1, P)),
  PUSH(3, PUSH(4, DUP2(GT(ISZERO(P))))) -> PUSH(3, PUSH(1, P)),
  PUSH(w_3, PUSH(w_3, DUP2(GT(ISZERO(P))))) -> PUSH(w_3, PUSH(1, P)),
  PUSH(2, PUSH(9, DUP2(GT(ISZERO(P))))) -> PUSH(2, PUSH(1, P)),
  PUSH(2, PUSH(6, DUP2(GT(ISZERO(P))))) -> PUSH(2, PUSH(1, P)),
  PUSH(2, PUSH(5, DUP2(GT(ISZERO(P))))) -> PUSH(2, PUSH(1, P)),
  PUSH(2, PUSH(3, DUP2(GT(ISZERO(P))))) -> PUSH(2, PUSH(1, P)),
  DUP1(PUSH(w_1, SWAP1(P))) -> PUSH(w_1, DUP2(P)),
  PUSH(1, PUSH(5, DUP2(GT(ISZERO(P))))) -> PUSH(1, PUSH(1, P)),
  PUSH(1, PUSH(3, DUP2(GT(ISZERO(P))))) -> PUSH(1, PUSH(1, P)),
  PUSH(1, PUSH(2, DUP2(GT(ISZERO(P))))) -> PUSH(1, PUSH(1, P)),
  PUSH(w_3, SLOAD(PUSH(w_2, SWAP1(P)))) -> PUSH(w_2, PUSH(w_3, SLOAD(P))),
  PUSH(1, CALLVALUE(LT(ISZERO(ISZERO(ISZERO(PUSH(w_2, P))))))) ->
    PUSH(w_2, CALLVALUE(ISZERO(ISZERO(SWAP1(P))))),
  PUSH(1, ISZERO(ISZERO(P))) -> PUSH(1, P),
  PUSH(0, DUP4(LT(ISZERO(ISZERO(ISZERO(P)))))) -> PUSH(1, P),
  PUSH(0, DUP3(DUP5(SUB(LT(ISZERO(P)))))) -> PUSH(1, P),
  PUSH(0, DUP3(LT(ISZERO(DUP1(ISZERO(P)))))) -> PUSH(1, PUSH(0, P)),
  PUSH(0, DUP3(LT(ISZERO(ISZERO(ISZERO(P)))))) -> PUSH(1, P),
  PUSH(0, DUP2(LT(ISZERO(DUP1(ISZERO(P)))))) -> PUSH(1, PUSH(0, P)),
  PUSH(0, DUP1(DUP3(MLOAD(GT(ISZERO(PUSH(w_3, P))))))) ->
    PUSH(0, PUSH(w_3, DUP3(MLOAD(ISZERO(SWAP1(P)))))),
  PUSH(0, DUP1(DUP3(LT(ISZERO(ISZERO(P)))))) -> PUSH(0, PUSH(0, P)),
  DUP1(DUP1(SLOAD(SWAP1(POP(SWAP1(POP(P))))))) -> SLOAD(P),
  DUP1(PUSH(w_6, DUP1(PUSH(w_5, SWAP3(POP(P)))))) ->
    PUSH(w_5, PUSH(w_6, PUSH(w_6, P))),
  PUSH(0, DUP1(CALLVALUE(EQ(ISZERO(ISZERO(P)))))) ->
    PUSH(0, CALLVALUE(ISZERO(P))),
  DUP1(CALLER(SWAP1(POP(P)))) -> CALLER(P),
  PUSH(0, DUP1(ADD(PUSH(w_2, ADD(SLOAD(SWAP1(POP(P)))))))) ->
    POP(PUSH(w_2, SLOAD(P))),
  PUSH(w_0, PUSH(w_2, SWAP1(POP(SWAP2(SWAP1(POP(P))))))) ->
    POP(PUSH(w_2, SWAP1(P))),
  PUSH(w_0, PUSH(9, PUSH(6, ADD(SLOAD(SWAP1(POP(P))))))) ->
    PUSH(15, SLOAD(P)),
  PUSH(w_0, PUSH(9, PUSH(5, ADD(SLOAD(SWAP1(POP(P))))))) ->
    PUSH(14, SLOAD(P)),
  PUSH(w_0, PUSH(w_2, DUP1(SLOAD(SWAP1(POP(SWAP1(POP(P)))))))) ->
    PUSH(w_2, SLOAD(P)),
  PUSH(0, PUSH(w_1, DUP2(GT(ISZERO(P))))) -> PUSH(0, PUSH(1, P)),
  PUSH(2, PUSH(3, DUP2(GT(P)))) -> PUSH(2, PUSH(0, P)),
  PUSH(1, PUSH(3, DUP2(GT(P)))) -> PUSH(1, PUSH(0, P)),
  PUSH(w_4, PUSH(1, MUL(SWAP2(POP(PUSH(w_3, P)))))) ->
    PUSH(w_3, PUSH(w_4, SWAP3(POP(P)))),
  PUSH(0, PUSH(w_1, MUL(SWAP2(POP(PUSH(w_3, P)))))) ->
    PUSH(w_3, PUSH(0, SWAP3(POP(P)))),
  PUSH(0, PUSH(0, DUP5(LT(P)))) -> PUSH(0, DUP1(P)),
  PUSH(0, ISZERO(ISZERO(P))) -> PUSH(0, P),
  PUSH(w_4, POP(PUSH(w_5, DUP4(DUP2(P))))) -> PUSH(w_5, DUP4(PUSH(w_5, P))),
  SWAP1(PUSH(w_1, SWAP1(DUP3(SWAP1(P))))) -> DUP1(PUSH(w_1, SWAP2(SWAP3(P)))),
  PUSH(w_1, DUP5(SWAP1(P))) -> DUP4(PUSH(w_1, P)),
  PUSH(w_1, DUP4(SWAP1(P))) -> DUP3(PUSH(w_1, P)),
  DUP2(DUP4(ADD(SWAP1(POP(SWAP3(SWAP2(POP(POP(P))))))))) ->
    POP(ADD(SWAP1(P))),
  PUSH(0, ADD(DUP2(SWAP1(SSTORE(POP(P)))))) -> SSTORE(P),
  DUP2(PUSH(w_1, DUP2(SWAP1(SSTORE(POP(POP(POP(P)))))))) ->
    POP(PUSH(w_1, SSTORE(P))),
  DUP1(SLOAD(PUSH(w_2, SWAP1(P)))) -> PUSH(w_2, DUP2(SLOAD(P))),
  PUSH(0, LT(ISZERO(P))) -> ISZERO(P),
  PUSH(4294967295, PUSH(7776, AND(P))) -> PUSH(7776, P),
  PUSH(w_1, TIMESTAMP(GT(SWAP1(POP(P))))) -> POP(PUSH(w_1, TIMESTAMP(GT(P)))),
  PUSH(w_2, SWAP1(DUP3(SWAP1(P)))) -> DUP2(PUSH(w_2, SWAP2(P))),
  DUP1(DUP5(AND(PUSH(w_4, SWAP1(DUP2(P)))))) ->
    PUSH(w_4, DUP2(DUP6(AND(PUSH(w_4, P))))),
  PUSH(w_1, DUP1(POP(POP(P)))) -> P,
  PUSH(w_3, MSIZE(SWAP1(MSIZE(ADD(PUSH(w_2, SWAP1(P))))))) ->
    MSIZE(PUSH(w_2, DUP2(PUSH(w_3, ADD(P))))),
  PUSH(w_4, PUSH(w_5, SHA3(SWAP1(PUSH(w_3, SWAP1(P)))))) ->
    PUSH(w_3, PUSH(w_4, PUSH(w_5, SHA3(SWAP2(P))))),
  ADD(DUP3(PUSH(0, NOT(AND(P))))) -> SWAP1(ADD(DUP3(P))),
  PUSH(w_0, ADD(POP(P))) -> POP(P),
  PUSH(w_3, DUP2(SWAP1(SSTORE(PUSH(w_2, DUP2(DUP2(P))))))) ->
    PUSH(w_2, DUP2(DUP2(DUP4(PUSH(w_3, SSTORE(P)))))),
  PUSH(w_2, SLOAD(TIMESTAMP(SWAP1(P)))) -> TIMESTAMP(PUSH(w_2, SLOAD(P))),
  PUSH(w_1, DUP1(SLOAD(SWAP1(POP(SWAP1(POP(P))))))) ->
    POP(PUSH(w_1, SLOAD(P))),
  PUSH(w_2, SLOAD(NUMBER(SWAP1(P)))) -> NUMBER(PUSH(w_2, SLOAD(P))),
  PUSH(w_4, PUSH(w_3, DUP1(DUP4(ADD(SWAP2(P)))))) ->
    PUSH(w_3, DUP2(ADD(PUSH(w_3, PUSH(w_4, P))))),
  PUSH(w_4, SLOAD(PUSH(0, NOT(ADD(P))))) -> PUSH(1, PUSH(w_4, SLOAD(SUB(P)))),
  DUP1(DUP2(GT(ISZERO(P)))) -> PUSH(1, P),
  PUSH(w_2, POP(P)) -> P,
  PUSH(0, DUP4(EQ(ISZERO(ISZERO(P))))) -> DUP3(ISZERO(P)),
  PUSH(0, DUP3(EQ(ISZERO(ISZERO(P))))) -> DUP2(ISZERO(P)),
  PUSH(w_0, DUP2(EXTCODESIZE(SWAP1(POP(SWAP2(SWAP1(POP(P)))))))) ->
    EXTCODESIZE(SWAP1(P)),
  PUSH(0, DUP2(GT(ISZERO(P)))) -> DUP1(SWAP1(ISZERO(P))),
  PUSH(0, DUP1(DUP3(EQ(P)))) -> PUSH(0, DUP2(ISZERO(P))),
  PUSH(0, DUP1(DUP3(LT(P)))) -> PUSH(0, PUSH(0, P)),
  PUSH(0, DUP1(DUP3(LT(ISZERO(P))))) -> PUSH(0, PUSH(1, P)),
  PUSH(0, DUP1(CALLVALUE(GT(ISZERO(P))))) -> PUSH(0, CALLVALUE(ISZERO(P))),
  PUSH(w_0, PUSH(w_2, SLOAD(SWAP1(POP(P))))) -> PUSH(w_2, SLOAD(P)),
  PUSH(w_2, PUSH(w_3, DUP2(SWAP1(SSTORE(POP(POP(P))))))) ->
    POP(PUSH(w_2, PUSH(w_3, SSTORE(P)))),
  PUSH(w_0, PUSH(w_3, SWAP1(POP(P)))) -> PUSH(w_3, P),
  PUSH(0, DUP3(EQ(P))) -> DUP2(ISZERO(P)),
  PUSH(0, CALLVALUE(EQ(ISZERO(ISZERO(P))))) -> CALLVALUE(ISZERO(P)),
  PUSH(0, CALLVALUE(GT(ISZERO(ISZERO(PUSH(w_2, P)))))) ->
    PUSH(w_2, CALLVALUE(ISZERO(ISZERO(SWAP1(P))))),
  PUSH(0, NOT(AND(PUSH(0, NOT(AND(P)))))) -> P,
  PUSH(w_3, DUP1(MLOAD(SWAP1(DUP2(ADD(P)))))) ->
    PUSH(w_3, MLOAD(DUP1(PUSH(w_3, ADD(P))))),
  PUSH(w_1, DUP1(NOT(AND(P)))) -> PUSH(0, P),
  PUSH(w_4, DUP1(DUP5(ADD(DUP3(SWAP1(P)))))) ->
    PUSH(w_4, DUP2(DUP5(PUSH(w_4, ADD(P))))),
  PUSH(1, ISZERO(ISZERO(DUP2(ISZERO(ISZERO(EQ(P))))))) ->
    DUP1(SWAP1(ISZERO(ISZERO(P)))),
  PUSH(0, DUP3(GT(ISZERO(P)))) -> DUP2(ISZERO(P)),
  PUSH(0, DUP2(GT(ISZERO(P)))) -> DUP1(ISZERO(P)),
  DUP2(SWAP1(SSTORE(POP(P)))) -> SSTORE(P),
  PUSH(0, ISZERO(ISZERO(DUP5(ISZERO(ISZERO(EQ(P))))))) ->
    SWAP2(SWAP2(DUP4(ISZERO(P)))),
  CALLER(PUSH(w_2, DUP2(P))) -> CALLER(PUSH(w_2, CALLER(P))),
  TIMESTAMP(PUSH(w_1, DUP1(DUP4(ADD(SWAP2(SWAP1(SWAP2(P)))))))) ->
    PUSH(w_1, TIMESTAMP(DUP2(DUP4(ADD(P))))),
  PUSH(0, EQ(ISZERO(ISZERO(P)))) -> ISZERO(P),
  CALLER(PUSH(w_1, DUP1(DUP4(ADD(SWAP2(SWAP1(SWAP2(P)))))))) ->
    PUSH(w_1, CALLER(DUP2(DUP4(ADD(P))))),
  CALLER(PUSH(w_2, ORIGIN(DUP3(EQ(P))))) ->
    CALLER(PUSH(w_2, CALLER(ORIGIN(EQ(P))))),
  PUSH(w_1, DUP2(SWAP1(P))) -> DUP1(PUSH(w_1, P)),
  DUP2(PUSH(0, DUP3(ADD(SLOAD(DUP2(P)))))) -> DUP2(DUP2(SLOAD(DUP4(P)))),
  SWAP1(PUSH(w_3, SWAP1(DUP2(SWAP1(DUP2(P)))))) ->
    PUSH(w_3, PUSH(w_3, SWAP2(SWAP3(PUSH(w_3, P))))),
  DUP3(DUP3(GT(ISZERO(ISZERO(P))))) -> DUP2(DUP4(LT(P))),
  PUSH(0, DUP2(EQ(P))) -> DUP1(ISZERO(P)),
  DUP2(DUP2(GT(ISZERO(ISZERO(P))))) -> DUP1(DUP3(LT(P))),
  GT(ISZERO(ISZERO(P))) -> GT(P),
  LT(ISZERO(ISZERO(P))) -> LT(P),
  ISZERO(ISZERO(ISZERO(P))) -> ISZERO(P),
  DUP1(DUP4(GT(ISZERO(ISZERO(P))))) -> DUP3(DUP2(LT(P))),
  DUP1(PUSH(w_1, DUP2(SWAP1(SSTORE(POP(POP(P))))))) -> PUSH(w_1, SSTORE(P)),
  PUSH(0, PUSH(w_1, AND(P))) -> PUSH(0, P),
  PUSH(w_1, SLOAD(SWAP1(POP(P)))) -> POP(PUSH(w_1, SLOAD(P))),
  DUP3(SWAP1(POP(P))) -> POP(DUP2(P)),
  PUSH(w_2, SWAP1(POP(P))) -> POP(PUSH(w_2, P)),
)
